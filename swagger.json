{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "QA test app",
    "description": "QA testing application"
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create a new user",
        "description": "Registration of a new user",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user to create",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "email": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["name", "email", "password"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new user object",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "default": "success",
                  "description": "Responce status"
                },
                "code": {
                  "type": "integer",
                  "default": 201,
                  "description": "Responce code"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Autorization token"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The new user name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The new user email"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "404": {
            "description": "Page not found error",
            "schema": { "$ref": "#definitions/NotFound" }
          },
          "409": {
            "description": "Conflict error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "default": "error",
                  "description": "Responce status"
                },
                "code": {
                  "type": "integer",
                  "default": 409,
                  "description": "Responce code"
                },
                "data": {
                  "type": "string",
                  "description": "Error"
                },
                "message": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#definitions/DefaultError" }
          },
          "default": {
            "description": "Unexpected error",
            "schema": { "$ref": "#definitions/DefaultError" }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User log in",
        "description": "Loggining in existing user",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user to log in",
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["email", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is logged in",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "default": "success",
                  "description": "Responce status"
                },
                "code": {
                  "type": "integer",
                  "default": 200,
                  "description": "Responce code"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Autorization token"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The logged in user name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The logged in user email"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "schema": { "$ref": "#definitions/Unauthorized" }
          },
          "404": {
            "description": "Page not found error",
            "schema": { "$ref": "#definitions/NotFound" }
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#definitions/DefaultError" }
          },
          "default": {
            "description": "Unexpected error",
            "schema": { "$ref": "#definitions/DefaultError" }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User log out",
        "description": "Log out current user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "Bearer token",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The user was logged out"
          },
          "401": {
            "description": "Unauthorized error",
            "schema": { "$ref": "#definitions/Unauthorized" }
          },
          "404": {
            "description": "Page not found error",
            "schema": { "$ref": "#definitions/NotFound" }
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#definitions/DefaultError" }
          },
          "default": {
            "description": "Unexpected error",
            "schema": { "$ref": "#definitions/DefaultError" }
          }
        }
      }
    },
    "/user/info": {
      "get": {
        "tags": ["User"],
        "summary": "Get user information",
        "description": "Information about current user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "Bearer token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Provide user information",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "default": "success",
                  "description": "Responce status"
                },
                "code": {
                  "type": "integer",
                  "default": 200,
                  "description": "Responce code"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The current user name"
                    },
                    "email": {
                      "type": "string",
                      "description": "The current user email"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "schema": { "$ref": "#definitions/Unauthorized" }
          },
          "404": {
            "description": "Page not found error",
            "schema": { "$ref": "#definitions/NotFound" }
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#definitions/DefaultError" }
          },
          "default": {
            "description": "Unexpected error",
            "schema": { "$ref": "#definitions/DefaultError" }
          }
        }
      }
    },
    "/test-tech": {
      "get": {
        "tags": ["Questions"],
        "summary": "Get questions",
        "description": "Return 12 technical questions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Provide questions",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "default": "success",
                  "description": "Responce status"
                },
                "code": {
                  "type": "integer",
                  "default": 200,
                  "description": "Responce code"
                },
                "data": {
                  "type": "array",
                  
                  "items": {
                    "type":"object",
                    "properties": {
                    "answers": {
                      "type": "array",
                      "items":{"type":"string"},
                      "description": "Answers"
                    },
                    "question": {
                      "type": "string",
                      "description": "Question"
                    },
                    "questionId": {
                      "type": "string",
                      "description": "Question Id"
                    },
                    "rightAnswer": {
                      "type": "string",
                      "description": "Right answer"
                    }
                  }
                  }
                }
              }
            }
          }
        }
      }
    }

  },
  "definitions": {
    "Unauthorized": {
      "properties": {
        "status": {
          "type": "string",
          "default": "error",
          "description": "Responce status"
        },
        "code": {
          "type": "integer",
          "default": 401,
          "description": "Responce code"
        },
        "data": {
          "type": "string",
          "description": "Error"
        },
        "message": {
          "type": "string",
          "description": "Error message"
        }
      }
    },
    "NotFound": {
      "properties": {
        "status": {
          "type": "string",
          "default": "error",
          "description": "Responce status"
        },
        "code": {
          "type": "integer",
          "default": 404,
          "description": "Responce code"
        },
        "message": {
          "type": "string",
          "description": "Error message"
        }
      }
    },
    "DefaultError": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Error message"
        }
      }
    }
  }
}
